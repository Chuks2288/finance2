generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Accounts {
  id      String  @id @default(cuid())
  name    String
  plaidId String?
  userId  String?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  transactions Transactions[] // One-to-many relationship
}

model Categories {
  id      String  @id @default(cuid())
  name    String
  plaidId String?
  userId  String?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  transactions Transactions[] // One-to-many relationship
}

model Transactions {
  id     String   @id @default(cuid())
  date   DateTime
  payee  String
  amount Int
  note   String?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  accountId String // Foreign key
  account   Accounts @relation(fields: [accountId], references: [id], onDelete: Cascade)

  categoryId String? // Foreign key
  category   Categories? @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}
